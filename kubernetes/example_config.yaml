debug: True
# Replace with your minikube installation f.e.
base_url: "http://192.168.99.100:30966"
# Errors are sent to this e-mail if specified
mail_error_address: "notify@me.com"
# Report e-mails are only sent if a configuration is supplied
mail:
  smtp_server: ""
  smtp_port: 587
  from_address: ""
  smtp_user: "dGVzdAo="
  smtp_password: "dGVzdAo="
redis:
  port: 6379
  image: redis:5.0.3
  min_mem: "100Mi"
  max_mem: "200Mi"
  # The amount of memory after which
  # redis will start to drop the oldest
  # keys. This should be a bit lower
  # than the memory set in min_mem
  max_redis_mem: "100mb"
  storage: "150Mi"
  min_cpu: "100m"
  max_cpu: "200m"
  # If a redis cluster should be used, this must be set to "True"
  use_cluster: "False"
rabbitmq:
  image: rabbitmq:3.11-management-alpine
  min_mem: "300Mi"
  max_mem: "500Mi"
  min_cpu: "100m"
  max_cpu: "200m"
reactome_api:
  image: jgriss/reactome-analysis_public-api:latest
  min_mem: "200Mi"
  max_mem: "500Mi"
  min_cpu: "100m"
  max_cpu: "250m"
  min_replicas: 1
  max_replicas: 3
  target_cpu_usage: 75
  node_type: "NodePort"
reactome_worker:
  image: jgriss/reactome-analysis_worker:latest
  min_mem: "500Mi"
  max_mem: "1000Mi"
  min_cpu: "0.5"
  max_cpu: "1"
  min_replicas: 1
  max_replicas: 1
  target_cpu_usage: 75
  # Maximum timeout in seconds the analysis may be running
  # without returning any update of its status (ie. log
  # message, etc)
  max_timeout: 60
reactome_report:
  image: jgriss/reactome-analysis_report:latest
  min_mem: "250Mi"
  max_mem: "1000Mi"
  min_cpu: "0.3"
  max_cpu: "1"
  min_replicas: 1
  max_replicas: 1
  target_cpu_usage: 75
reactome_datasets:
  image: jgriss/reactome-analysis_datasets:latest
  min_mem: "100Mi"
  max_mem: "200Mi"
  min_cpu: "0.1"
  max_cpu: "0.3"
  # Storage cache for the pod
  min_storage: "500Mi"
  max_storage: "1Gi"
  min_replicas: 1
  max_replicas: 1
  target_cpu_usage: 75
  # Maximum time in seconds during which any step in the loading
  # process may show no sign of activity.
  max_loading_timeout: "60"
  # The grein-proxy is a separate application that can be deployed
  # within the k8s setup
  use_grein_proxy: "false"